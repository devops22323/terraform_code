name: Application Checks

on:
  pull_request:
    branches:
      - master

jobs:
  application-checks:
    name: Validate
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout Feature Branch Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Run Tests
        id: run-tests
        if: success()
        run: |
          echo "Running tests..."
          echo "Tests completed successfully!"
          echo "test_output=Tests completed successfully!" >> $GITHUB_OUTPUT

      - name: Update PR Comment with Test Results
        uses: actions/github-script@v6
        with:
          script: |
            const output = "${{ steps.run-tests.outputs.test_output }}";
            const prNumber = context.payload.pull_request.number;

            // Check if a comment already exists from this workflow
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            // Find the comment created by this workflow (if any)
            const botComment = comments.find(comment =>
              comment.user.login === 'github-actions[bot]' &&
              comment.body.includes('**Test Results:**')
            );

            // Create or update the comment
            const commentBody = `**Test Results:**\n${output}`;

            if (botComment) {
              // Update the existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody,
              });
              console.log("Updated existing PR comment.");
            } else {
              // Create a new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody,
              });
              console.log("Created new PR comment.");
            }